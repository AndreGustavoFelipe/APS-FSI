unit UAgendamentos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Buttons,
  Vcl.ComCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.DBCtrls, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxStyles, cxCustomData, cxFilter, cxData,
  cxDataStorage, cxEdit, cxNavigator, cxDBData, cxGridLevel,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, cxClasses,
  cxGridCustomView, cxGrid, Vcl.WinXPickers;

type
  TFormAgendamento = class(TForm)
    Panel2: TPanel;
    Panel3: TPanel;
    Panel7: TPanel;
    edtModelo: TEdit;
    Panel8: TPanel;
    edtPlaca: TEdit;
    Panel5: TPanel;
    pnlSalvar: TPanel;
    btnSalvar: TSpeedButton;
    pnlCancelar: TPanel;
    btnCancelar: TSpeedButton;
    queryFuncionarios: TFDQuery;
    dsAgendamentos: TDataSource;
    queryServicos: TFDQuery;
    queryServicosID: TIntegerField;
    queryServicosDESCRICAO: TStringField;
    queryServicosVALOR: TSingleField;
    dsServicos: TDataSource;
    Panel1: TPanel;
    cbFuncionario: TComboBox;
    Panel6: TPanel;
    cxGrid1: TcxGrid;
    cxGridServicos: TcxGridDBTableView;
    cxGridServicosID: TcxGridDBColumn;
    cxGridServicosDESCRICAO: TcxGridDBColumn;
    cxGridServicosVALOR: TcxGridDBColumn;
    cxGrid1Level1: TcxGridLevel;
    Panel4: TPanel;
    dtDiaAgendamento: TDateTimePicker;
    Panel9: TPanel;
    cbTipoVeiculo: TComboBox;
    queryFuncionariosID: TIntegerField;
    queryFuncionariosNOME: TStringField;
    queryFuncionariosSENHA: TStringField;
    queryFuncionariosTIPO: TSmallintField;
    timePicker: TTimePicker;
    Panel10: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    procedure btnCancelarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
  private
    function VerificaCampos: boolean;
    { Private declarations }
  public
    { Public declarations }
    operacao : integer; // 0 -> Cadastro // 1 -> Edição // 2 -> Exclusão
  end;

var
  FormAgendamento: TFormAgendamento;

implementation

{$R *.dfm}

uses UDataModule, UPrincipal, ULogin;

procedure TFormAgendamento.btnCancelarClick(Sender: TObject);
begin
  Close;
end;

function TFormAgendamento.VerificaCampos() : boolean;
begin
  if edtPlaca.Text = '' then
  begin
    showmessage('Informe uma placa!');
    result := false;
  end
  else if edtModelo.Text = '' then
  begin
    showmessage('Informe um modelo!');
    result := false;
  end
  else if not (cbTipoVeiculo.ItemIndex in [0,1,2,3]) then
  begin
    showmessage('Selecione algum tipo de veiculo!');
    result := false;
  end
  else if not (cbTipoVeiculo.ItemIndex in [0]) then
  begin
    showmessage('Selecione algum tipo de veiculo!');
    result := false;
  end
  else if cxGridServicos.Controller.SelectedRowCount <= 0 then
  begin
    showmessage('Selecione ao menos um serviço!');
    result := false;
  end

  else
    result := true;
end;


procedure TFormAgendamento.btnSalvarClick(Sender: TObject);
begin

  if VerificaCampos then
  begin

    with TFDQuery.Create(Self) do
    begin
      try
        connection := dm.con;

        sql.Add('insert into AGENDAMENTOS(ID_CLIENTE, ID_FUNCINARIO, DATA_AGENDAMENTO, DATA_AGENDADA, HORA_AGENDAMENTO, HORA_ENTREGA, PLACA, TIPO_VEICULO, STATUS, MODELO)');
        sql.Add('values (:ID_CLIENTE, :ID_FUNCINARIO, :DATA_AGENDAMENTO, :DATA_AGENDADA, :HORA_AGENDAMENTO, :HORA_ENTREGA, :PLACA, :TIPO_VEICULO, :STATUS, :MODELO)');

        ParamByName('ID_CLIENTE').Value := FormLogin.idUsuario;
        ParamByName('ID_FUNCINARIO').Value := 11;
        ParamByName('DATA_AGENDAMENTO').Value := now;
        ParamByName('DATA_AGENDADA').Value :=  dtDiaAgendamento.Date;
        ParamByName('HORA_AGENDAMENTO').DataType := ftTime;
        ParamByName('HORA_AGENDAMENTO').Value := timePicker.Time;
        ParamByName('HORA_ENTREGA').DataType := ftTime;
        ParamByName('HORA_ENTREGA').value := timePicker.Time;
        ParamByName('PLACA').Value := edtPlaca.Text;
        ParamByName('TIPO_VEICULO').Value := cbTipoVeiculo.ItemIndex;
        ParamByName('MODELO').Value := edtModelo.Text;

        ExecSql;
      finally

        Free;

      end;
    end;
  end;

end;

procedure TFormAgendamento.FormShow(Sender: TObject);
begin

  with queryFuncionarios do
  begin
    close;
    open;

    Last;
    First;

    while not Eof do
    begin
      cbFuncionario.Items.Add(FieldByName('nome').AsString);
      next;
    end;
  end;


  queryServicos.Open;
end;

end.
