unit UUsuarios;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Buttons, Vcl.ExtCtrls, Data.DB,
  Vcl.Imaging.pngimage, Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.ComCtrls,
  cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters, cxStyles,
  cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, cxNavigator, cxDBData,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, cxGridCustomTableView, cxGridTableView,
  cxGridDBTableView, FireDAC.Comp.DataSet, FireDAC.Comp.Client, cxGridLevel,
  cxClasses, cxGridCustomView, cxGrid, UDataModule, cxGridChartView,
  cxGridDBChartView, Vcl.DBCtrls, dxSkinsCore, dxSkinBlack, dxSkinBlue,
  dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinOffice2016Colorful, dxSkinOffice2016Dark,
  dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus,
  dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinTheAsphaltWorld, dxSkinTheBezier, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, cxDataControllerConditionalFormattingRulesManagerDialog;

type
  TFormUsuarios = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Panel8: TPanel;
    btnNovoUsuario: TSpeedButton;
    Panel3: TPanel;
    btnEditar: TSpeedButton;
    Panel4: TPanel;
    btnExcluir: TSpeedButton;
    pgControl: TPageControl;
    tabListagem: TTabSheet;
    DBGrid1: TDBGrid;
    tabCad: TTabSheet;
    Panel5: TPanel;
    edtCadSenha: TEdit;
    Panel6: TPanel;
    edtCadUsuario: TEdit;
    rdGroupTipos: TRadioGroup;
    imgCadeado: TImage;
    Panel7: TPanel;
    pnlSalvar: TPanel;
    btnSalvar: TSpeedButton;
    pnlCancelar: TPanel;
    btnCancelar: TSpeedButton;
    Panel9: TPanel;
    btnVoltar: TSpeedButton;
    queryUsuarios: TFDQuery;
    dsUsuarios: TDataSource;
    queryUsuariosID: TIntegerField;
    queryUsuariosNOME: TStringField;
    queryUsuariosSENHA: TStringField;
    queryUsuariosTIPO: TSmallintField;
    cxGridUsuarios: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    cxGrid1: TcxGrid;
    cxGrid1DBChartView1: TcxGridDBChartView;
    cxGrid1DBChartView1Series1: TcxGridDBChartSeries;
    cxGridUsuariosID: TcxGridDBColumn;
    cxGridUsuariosNOME: TcxGridDBColumn;
    cxGridUsuariosSENHA: TcxGridDBColumn;
    cxGridUsuariosTIPO: TcxGridDBColumn;
    procedure imgCadeadoClick(Sender: TObject);
    procedure btnNovoUsuarioClick(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure pgControlChange(Sender: TObject);
    procedure btnVoltarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
  private
    operacao, idUsuario : integer; // 0 -> Cadastro // 1 -> Edição // 2 -> Exclusão
  public
    { Public declarations }
  end;

var
  FormUsuarios: TFormUsuarios;

implementation

{$R *.dfm}

procedure TFormUsuarios.btnCancelarClick(Sender: TObject);
begin
   // limpa campos da tab usuario
   pgControl.TabIndex := 0;
end;

procedure TFormUsuarios.btnNovoUsuarioClick(Sender: TObject);
begin
  operacao := 0;
  pgControl.TabIndex := 1;
  edtCadUsuario.SetFocus;
end;

procedure TFormUsuarios.btnSalvarClick(Sender: TObject);
begin

  case operacao of
    0:
    begin
      with TFDQuery.Create(Self) do
      begin
        try
          Connection := dm.con;

          SQL.Clear;
          SQL.Add('insert into USUARIOS(NOME, SENHA, TIPO)');
          SQL.Add('values(:nome, :senha, :tipo)');

          ParamByName('nome').Value := edtCadUsuario.Text;
          ParamByName('senha').Value := edtCadSenha.Text;
          ParamByName('tipo').Value := rdGroupTipos.ItemIndex;

          ExecSQL;
        finally
          ShowMessage('Cadastrado com Sucesso!');
          Free;
        end;
      end;
    end;

    1:
    begin
      with TFDQuery.Create(Self) do
      begin
        try
          Connection := dm.con;

          SQL.Clear;
          SQL.Add('update USUARIOS');
          SQL.Add('set nome = :nome, senha = :senha, tipo = :tipo');
          SQL.Add('where id = :id');

          ParamByName('nome').Value := edtCadUsuario.Text;
          ParamByName('senha').Value := edtCadSenha.Text;
          ParamByName('tipo').Value := rdGroupTipos.ItemIndex;
          ParamByName('id').Value := idUsuario;

          ExecSQL;
        finally
          ShowMessage('Editado com Sucesso!');
          Free;
        end;
      end;
    end;

  end;



  queryUsuarios.Close;
  queryUsuarios.Open;
  pgControl.TabIndex := 0;
end;

procedure TFormUsuarios.btnVoltarClick(Sender: TObject);
begin
  Close;
end;

procedure TFormUsuarios.FormShow(Sender: TObject);
begin
  operacao := 0;
  pgControl.TabIndex := 0;
  queryUsuarios.Open;
end;

procedure TFormUsuarios.imgCadeadoClick(Sender: TObject);
var
  picture : TPicture;
  aux : string;
begin
  picture := TPicture.Create;
  try
    if imgCadeado.Tag = 0 then
    begin
      aux := 'imgs\telaLogin\cadeadoAberto.png';
      edtCadSenha.PasswordChar :=  #0;
      imgCadeado.Tag := 1;
    end
    else
    begin
      aux := 'imgs\telaLogin\cadeadoFechado.png';
      edtCadSenha.PasswordChar := '*';
      imgCadeado.Tag := 0;
    end;
    picture.LoadFromFile(ExtractFilePath(ParamStr(0)) + aux);
    imgCadeado.Picture.Assign(picture);

  finally
    picture.Free;
  end;
end;

procedure TFormUsuarios.pgControlChange(Sender: TObject);
begin
  operacao := 0;
end;

procedure TFormUsuarios.btnEditarClick(Sender: TObject);
begin
  operacao := 1;
  pgControl.TabIndex := 1;
  edtCadUsuario.SetFocus;
  idUsuario := dsUsuarios.DataSet.FieldByName('ID').AsInteger;
  edtCadUsuario.Text := dsUsuarios.DataSet.FieldByName('NOME').AsString;
  edtCadSenha.Text := dsUsuarios.DataSet.FieldByName('SENHA').AsString;
  rdGroupTipos.ItemIndex := dsUsuarios.DataSet.FieldByName('TIPO').AsInteger;
end;

procedure TFormUsuarios.btnExcluirClick(Sender: TObject);
begin

  idUsuario := dsUsuarios.DataSet.FieldByName('ID').AsInteger;

  if (MessageDlg('Deseja excluir o usuario ' + dsUsuarios.DataSet.FieldByName('NOME').AsString + ' do sistema?', mtConfirmation, [mbNo, mbYes], 0) = mrYes) then
  begin

    with TFDQuery.Create(self) do
    begin
      try
        Connection := dm.con;

         SQL.Add('DELETE FROM USUARIOS');
         SQL.Add('WHERE ID = :ID');
         ParamByName('ID').Value := idUsuario;

         ExecSQL;
      finally
        ShowMessage('Exclusão realizada com sucesso!');
        queryUsuarios.Close;
        queryUsuarios.Open;
        Free;
      end;
    end;

  end;

end;

end.
