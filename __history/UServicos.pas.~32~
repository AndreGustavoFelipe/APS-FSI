unit UServicos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.ComCtrls, Vcl.Buttons, Vcl.ExtCtrls, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, cxStyles, cxCustomData, cxFilter,
  cxData, cxDataStorage, cxEdit, cxNavigator, cxDBData, cxGridLevel,
  cxGridChartView, cxGridDBChartView, cxClasses, cxGridCustomView,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, cxGrid,
  dxSkinsCore, dxSkinBlack, dxSkinBlue, dxSkinBlueprint, dxSkinCaramel,
  dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide, dxSkinDevExpressDarkStyle,
  dxSkinDevExpressStyle, dxSkinFoggy, dxSkinGlassOceans, dxSkinHighContrast,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMetropolis, dxSkinMetropolisDark, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinOffice2016Colorful,
  dxSkinOffice2016Dark, dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic,
  dxSkinSharp, dxSkinSharpPlus, dxSkinSilver, dxSkinSpringTime, dxSkinStardust,
  dxSkinSummer2008, dxSkinTheAsphaltWorld, dxSkinTheBezier,
  dxSkinsDefaultPainters, dxSkinValentine, dxSkinVisualStudio2013Blue,
  dxSkinVisualStudio2013Dark, dxSkinVisualStudio2013Light, dxSkinVS2010,
  dxSkinWhiteprint, dxSkinXmas2008Blue,
  cxDataControllerConditionalFormattingRulesManagerDialog, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, cxContainer, cxTextEdit,
  cxCurrencyEdit,System.UITypes;

type
  TFormServicos = class(TForm)
    Panel1: TPanel;
    Panel8: TPanel;
    btnNovoUsuario: TSpeedButton;
    Panel3: TPanel;
    btnEditar: TSpeedButton;
    Panel4: TPanel;
    btnExcluir: TSpeedButton;
    Panel9: TPanel;
    btnVoltar: TSpeedButton;
    Panel2: TPanel;
    pgControl: TPageControl;
    tabListagem: TTabSheet;
    tabCad: TTabSheet;
    Panel6: TPanel;
    edtValorServico: TEdit;
    Panel7: TPanel;
    pnlSalvar: TPanel;
    btnSalvar: TSpeedButton;
    pnlCancelar: TPanel;
    btnCancelar: TSpeedButton;
    cxGrid1: TcxGrid;
    cxGridServicos: TcxGridDBTableView;
    cxGrid1DBChartView1: TcxGridDBChartView;
    cxGrid1DBChartView1Series1: TcxGridDBChartSeries;
    cxGrid1Level1: TcxGridLevel;
    Panel10: TPanel;
    edtDescricaoServico: TEdit;
    dsServicos: TDataSource;
    queryServicos: TFDQuery;
    queryServicosID: TIntegerField;
    queryServicosDESCRICAO: TStringField;
    queryServicosVALOR: TSingleField;
    cxGridServicosID: TcxGridDBColumn;
    cxGridServicosDESCRICAO: TcxGridDBColumn;
    cxGridServicosVALOR: TcxGridDBColumn;
    cxStyleRepository1: TcxStyleRepository;
    StyleHeader: TcxStyle;
    cxStyleRepository2: TcxStyleRepository;
    StyleContent: TcxStyle;
    procedure btnCancelarClick(Sender: TObject);
    procedure btnNovoUsuarioClick(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure btnVoltarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure cxGridServicosCustomDrawColumnHeader(Sender: TcxGridTableView;
      ACanvas: TcxCanvas; AViewInfo: TcxGridColumnHeaderViewInfo;
      var ADone: Boolean);
    procedure edtValorServicoKeyPress(Sender: TObject; var Key: Char);
  private
    idServico : integer;
    procedure limpaCampos;
    { Private declarations }
  public
    { Public declarations }
    operacao : integer; // 0 -> Cadastro // 1 -> Edição // 2 -> Exclusão
  end;

var
  FormServicos: TFormServicos;

implementation

{$R *.dfm}

uses UDataModule;

procedure TFormServicos.limpaCampos();
begin
  edtDescricaoServico.Text := '';
  edtValorServico.Text := '';
end;

procedure TFormServicos.btnCancelarClick(Sender: TObject);
begin
  // limpa campos da tab usuario
   pgControl.TabIndex := 0;
end;

procedure TFormServicos.btnEditarClick(Sender: TObject);
begin
  operacao := 1;
  pgControl.TabIndex := 1;
  edtDescricaoServico.SetFocus;
  idServico := dsServicos.DataSet.FieldByName('ID').AsInteger;
  edtDescricaoServico.Text := dsServicos.DataSet.FieldByName('DESCRICAO').AsString;
  edtValorServico.Text := FormatFloat('R$ #,##0.00', dsServicos.DataSet.FieldByName('VALOR').AsFloat);
end;

procedure TFormServicos.btnExcluirClick(Sender: TObject);
begin
  idServico := dsServicos.DataSet.FieldByName('ID').AsInteger;

  if (MessageDlg('Deseja excluir o serviço ' + dsServicos.DataSet.FieldByName('DESCRICAO').AsString + ' do sistema?', mtConfirmation, [mbNo, mbYes], 0) = mrYes) then
  begin

    with TFDQuery.Create(self) do
    begin
      try
        Connection := dm.con;

         SQL.Add('DELETE FROM USUARIOS');
         SQL.Add('WHERE ID = :ID');
         ParamByName('ID').Value := idServico;

         ExecSQL;
      finally
        ShowMessage('Exclusão realizada com sucesso!');
        queryServicos.Close;
        queryServicos.Open;
        Free;
      end;
    end;
end;
end;

procedure TFormServicos.btnNovoUsuarioClick(Sender: TObject);
begin
  operacao := 0;
  pgControl.TabIndex := 1;
  edtDescricaoServico.SetFocus;
end;

procedure TFormServicos.btnSalvarClick(Sender: TObject);
begin

  case operacao of
    0:
    begin
      with TFDQuery.Create(Self) do
      begin
        try
          Connection := dm.con;

          SQL.Clear;
          SQL.Add('insert into SERVICOS(DESCRICAO, VALOR)');
          SQL.Add('values(:DESCRICAO, :VALOR)');

          ParamByName('DESCRICAO').Value := edtDescricaoServico.Text;
          ParamByName('VALOR').AsFloat := StrToFloat(StringReplace(StringReplace(edtValorServico.Text, 'R$', '', [rfReplaceAll]), '.', '', [rfReplaceAll]));

          ExecSQL;
        finally
          ShowMessage('Cadastrado com Sucesso!');
          Free;
        end;
      end;
    end;

    1:
    begin
      with TFDQuery.Create(Self) do
      begin
        try
          Connection := dm.con;

          SQL.Clear;
          SQL.Add('update SERVICOS');
          SQL.Add('set DESCRICAO = :DESCRICAO, VALOR = :VALOR');
          SQL.Add('where id = :id');

          ParamByName('DESCRICAO').Value := edtDescricaoServico.Text;
          ParamByName('VALOR').AsFloat := StrToFloat(StringReplace(StringReplace(edtValorServico.Text, 'R$', '', [rfReplaceAll]), '.', '', [rfReplaceAll]));
          ParamByName('id').Value := idServico;

          ExecSQL;
        finally
          ShowMessage('Editado com Sucesso!');
          Free;
        end;
      end;
    end;

  end;

  limpaCampos;
  queryServicos.Close;
  queryServicos.Open;
  pgControl.TabIndex := 0;

end;

procedure TFormServicos.btnVoltarClick(Sender: TObject);
begin
  Close;
end;

procedure TFormServicos.cxGridServicosCustomDrawColumnHeader(
  Sender: TcxGridTableView; ACanvas: TcxCanvas;
  AViewInfo: TcxGridColumnHeaderViewInfo; var ADone: Boolean);
begin
  ACanvas.Brush.Color := TColor($00E1C7B4);
  ACanvas.FillRect(AViewInfo.Bounds);
  ACanvas.Font.Color := clBlack;
  ACanvas.Font.Style := [fsBold];
  ACanvas.TextOut(AViewInfo.Bounds.Left + 4, AViewInfo.Bounds.Top + 2, AViewInfo.Text);
  ADone := True;
end;

procedure TFormServicos.edtValorServicoKeyPress(Sender: TObject; var Key: Char);
begin
  if not CharInSet(Key, ['0'..'9', ',', #8]) then
    Key := #0;
end;

procedure TFormServicos.FormShow(Sender: TObject);
begin
  operacao := 0;
  pgControl.TabIndex := 0;
  queryServicos.Open;
end;
end.
